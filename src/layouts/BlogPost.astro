---
import SEO from "../components/SEO.astro";
import Analytics from "../components/Analytics.astro";
import { formatDate } from "../utils/formatDate";
import type { BlogEntry } from "../content/config";

type Props = BlogEntry & {
  relatedPosts: Array<{ slug: string; title: string }>;
};

const { title, description, image, publishDate, relatedPosts } = Astro.props as Props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <SEO title={title} description={description} image={image} type="article" publishDate={publishDate} />

    <Analytics />
  </head>
  <body class="bg-background text-text-primary font-sans leading-relaxed">
    <header class="fixed inset-x-0 top-0 z-50 navbar-overlay" id="navbar">
      <nav class="max-w-6xl mx-auto p-4 flex items-center justify-between">
        <div class="flex items-center gap-4">
          <img src="/me.png" alt="Omri Lavi" class="w-10 h-10 rounded-full border-2 border-white/20 shadow-md" />
          <span class="text-text-primary font-medium hidden sm:block">Omri Lavi</span>
        </div>
        <a
          href="/"
          class="inline-flex items-center gap-2 text-primary hover:text-text-primary transition-colors duration-200 font-medium"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          Home
        </a>
      </nav>
    </header>

    <article>
      <!-- HERO SECTION -->
      <section class="relative h-[90vh] min-h-[600px] md:h-[80vh] md:min-h-[500px] max-h-[800px] blogpost-hero">
        <!-- Hero Background Image -->
        <div class="absolute inset-0">
          <img src={image} alt="" class="h-full w-full object-cover" />
          <!-- Gradient overlay: dark at top for text contrast, transparent at bottom for smooth transition -->
          <div class="absolute inset-0 bg-gradient-to-b from-black/80 via-black/60 to-transparent"></div>
          <!-- Bottom fade to background color -->
          <div class="absolute inset-x-0 bottom-0 h-48 bg-gradient-to-b from-transparent to-background"></div>
        </div>

        <!-- Hero Content -->
        <div class="relative z-10 flex items-center h-full">
          <div class="mx-auto max-w-[80ch] md:max-w-[88ch] px-6 md:px-8 lg:px-12 w-full">
            <div class="pt-16 md:pt-20">
              <h1 class="text-4xl md:text-5xl lg:text-6xl font-semibold leading-tight text-white hero-text-shadow">
                {title}
              </h1>
              {
                description && (
                  <p class="mt-4 text-base md:text-lg text-white/95 leading-7 font-medium hero-text-shadow hero-text-soft">
                    {description}
                  </p>
                )
              }
              <div class="mt-6 text-sm text-white/80 font-medium hero-text-shadow hero-text-soft">
                <time datetime={publishDate.toISOString()}>{formatDate(publishDate)}</time>
              </div>
            </div>
          </div>
        </div>
      </section>

      <!-- CONTENT SECTION -->
      <section>
        <div class="mx-auto max-w-[80ch] md:max-w-[88ch] px-6 md:px-8 lg:px-12 pt-8 pb-12 lg:pt-12 lg:pb-16">
          <div
            class="prose prose-invert mx-auto
                      prose-headings:scroll-mt-28 prose-headings:leading-tight prose-headings:text-text-primary
                      prose-p:leading-7 prose-p:text-text-primary
                      prose-a:text-primary prose-a:no-underline hover:prose-a:underline
                      prose-a:decoration-primary prose-a:transition-all
                      prose-strong:text-text-primary
                      prose-li:text-text-primary prose-li:leading-7
                      prose-img:rounded-2xl prose-img:border prose-img:border-border-tertiary
                      prose-pre:border prose-pre:border-border-tertiary
                      prose-pre:rounded-2xl prose-pre:overflow-x-auto
                      prose-code:text-text-primary
                      prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-code:font-mono prose-code:text-sm
                      prose-blockquote:border-l-primary prose-blockquote:text-text-secondary"
          >
            <slot />
            {
              relatedPosts.length > 0 && (
                <>
                  <h2 class="text-2xl font-semibold">Related Posts</h2>
                  <ul class="mt-4 space-y-2">
                    {relatedPosts.map((post) => (
                      <li>
                        <a href={`/blog/${post.slug}`}>{post.title}</a>
                      </li>
                    ))}
                  </ul>
                </>
              )
            }
          </div>
        </div>
      </section>
    </article>

    <style>
      .mermaid {
        @apply max-w-full max-h-[500px] my-8 bg-surface rounded-2xl p-4 border border-border-tertiary overflow-auto;
      }

      @media (max-width: 768px) {
        .mermaid {
          @apply max-h-[350px] my-6 p-3;
        }
      }

      .navbar-overlay {
        @apply transition-colors duration-300 ease-in-out;
      }

      .navbar-overlay.scrolled {
        @apply bg-background border-b border-border-tertiary;
      }

      /* Strong, crisp outline for hero text to maximize contrast over busy backgrounds */
      .blogpost-hero {
        --hero-shadow-rgb: 0 0 0; /* base color as RGB to allow alpha overrides */
        --hero-shadow-alpha: 0.55; /* strong variant default */
        --hero-shadow-glow-alpha: 0.4;
        --hero-shadow-glow-blur: 14px;
      }

      .hero-text-shadow {
        --hero-text-shadow: 0 1px 0 rgb(var(--hero-shadow-rgb) / var(--hero-shadow-alpha)),
          0 -1px 0 rgb(var(--hero-shadow-rgb) / var(--hero-shadow-alpha)),
          1px 0 0 rgb(var(--hero-shadow-rgb) / var(--hero-shadow-alpha)),
          -1px 0 0 rgb(var(--hero-shadow-rgb) / var(--hero-shadow-alpha)),
          1px 1px 0 rgb(var(--hero-shadow-rgb) / var(--hero-shadow-alpha)),
          -1px 1px 0 rgb(var(--hero-shadow-rgb) / var(--hero-shadow-alpha)),
          1px -1px 0 rgb(var(--hero-shadow-rgb) / var(--hero-shadow-alpha)),
          -1px -1px 0 rgb(var(--hero-shadow-rgb) / var(--hero-shadow-alpha)),
          0 0 var(--hero-shadow-glow-blur) rgb(var(--hero-shadow-rgb) / var(--hero-shadow-glow-alpha));
        text-shadow: var(--hero-text-shadow);
      }

      /* Utility to soften the same shadow */
      .hero-text-soft {
        --hero-shadow-alpha: 0.3;
        --hero-shadow-glow-alpha: 0.1;
        --hero-shadow-glow-blur: 8px;
      }
    </style>

    <script>
      // Navbar scroll behavior
      const navbar = document.getElementById("navbar");
      let scrolled = false;

      function updateNavbar() {
        if (!navbar) return;

        const shouldBeScrolled = window.scrollY > 12;

        if (shouldBeScrolled && !scrolled) {
          navbar.classList.add("scrolled");
          scrolled = true;
        } else if (!shouldBeScrolled && scrolled) {
          navbar.classList.remove("scrolled");
          scrolled = false;
        }
      }

      window.addEventListener("scroll", updateNavbar);
      updateNavbar(); // Check initial state
    </script>
  </body>
</html>
